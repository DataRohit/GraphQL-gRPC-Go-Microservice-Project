services:
    account-service:
        build:
            context: .
            dockerfile: ./account/compose/account.dockerfile
        image: account-service:latest
        container_name: account-service
        volumes:
            - .:/app:z
        env_file:
            - ./account/.envs/.account.env
        networks:
            - graphql-gprc-go-microservices-network
        depends_on:
            - account-service-db

    account-service-db:
        build:
            context: .
            dockerfile: ./account/compose/account-db.dockerfile
        image: account-service-db:latest
        container_name: account-service-db
        volumes:
            - account-service-db-data:/var/lib/postgresql/data
        env_file:
            - ./account/.envs/.account-db.env
        networks:
            - graphql-gprc-go-microservices-network

    product-service:
        build:
            context: .
            dockerfile: ./product/compose/product.dockerfile
        image: product-service:latest
        container_name: product-service
        volumes:
            - .:/app:z
        env_file:
            - ./product/.envs/.product.env
        networks:
            - graphql-gprc-go-microservices-network
        depends_on:
            - product-service-db

    product-service-db:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.17.24
        container_name: product-service-db
        environment:
            ES_JAVA_OPTS: -Xms1g -Xmx1g
            discovery.type: single-node
        networks:
            - graphql-gprc-go-microservices-network

    gateway-service:
        build:
            context: .
            dockerfile: ./gateway/compose/gateway.dockerfile
        image: gateway-service:latest
        container_name: gateway-service
        ports:
            - "8080:8080"
        volumes:
            - .:/app:z
        env_file:
            - ./gateway/.envs/.gateway.env
        networks:
            - graphql-gprc-go-microservices-network

    postgres-db-admin:
        image: dpage/pgadmin4
        container_name: postgres-db-admin
        ports:
            - "5050:80"
        env_file:
            - ./.envs/.pgadmin.env
        networks:
            - graphql-gprc-go-microservices-network

    elasticsearch-db-admin:
        image: docker.elastic.co/kibana/kibana:7.17.24
        container_name: elasticsearch-db-admin
        ports:
            - "5601:5601"
        env_file:
            - ./.envs/.kibana.env
        networks:
            - graphql-gprc-go-microservices-network

networks:
    graphql-gprc-go-microservices-network:
        driver: bridge

volumes:
    account-service-db-data:
